--ex1
SELECT
extract(year from transaction_date) as year,
product_id,
spend as curr_year_spend,
LAG(spend) over(PARTITION BY product_id order by transaction_date) as prev_year_spend,
Round(100*(spend-LAG(spend) over(PARTITION BY  product_id order by transaction_date))
/LAG(spend) over(PARTITION BY  product_id order by transaction_date),2) as yoy_rate
FROM user_transactions
order by product_id, year
--ex2
SELECT 
    distinct card_name,
    FIRST_VALUE(issued_amount) OVER (
      PARTITION BY (card_name) ORDER BY issue_year, issue_month
    ) as issued_amount
FROM monthly_cards_issued
order by issued_amount desc;
--ex3
SELECT user_id, spend,transaction_date
FROM 
(select user_id, spend,transaction_date,
row_number () over(PARTITION BY user_id order by transaction_date)
as row_num
from transactions) as trans_number
where row_num=3
--ex4
WITH latest_transactions_cte AS (
  SELECT 
    transaction_date, 
    user_id, 
    product_id, 
    RANK() OVER (
      PARTITION BY user_id 
      ORDER BY transaction_date DESC) AS transaction_rank 
  FROM user_transactions)   
SELECT 
  transaction_date, 
  user_id,
  COUNT(product_id) AS purchase_count
FROM latest_transactions_cte
WHERE transaction_rank = 1 
GROUP BY transaction_date, user_id
ORDER BY transaction_date;
--ex5

--ex6
--ex7
SELECT 
  category, 
  product, 
  total_spend 
FROM (
  SELECT 
    category, 
    product, 
    SUM(spend) AS total_spend,
    RANK() OVER (
      PARTITION BY category 
      ORDER BY SUM(spend) DESC) AS ranking 
  FROM product_spend
  WHERE EXTRACT(YEAR FROM transaction_date) = 2022
  GROUP BY category, product
) AS ranked_spending
WHERE ranking <= 2 
ORDER BY category, ranking
--ex8

with b as (
select a.artist_name,
dense_rank () over (order by count(c.song_id) DESC)
as artist_rank
from songs as s 
join global_song_rank as c 
on c.song_id=s.song_id
join artists as a
on s.artist_id=a.artist_id
where c.rank<=10
group by  a.artist_name
order by artist_rank)

select b.artist_name,
b.artist_rank
from b 
where b.artist_rank <=5
order by artist_rank
 



