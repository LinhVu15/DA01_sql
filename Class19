--ex1
ALTER TABLE public.sales_dataset_rfm_prj 
ALTER COLUMN priceeach TYPE 
numeric USING (priceeach::numeric);
--ex2
select * from public.sales_dataset_rfm_prj
where ordernumber is NULL or ordernumber=''
or quantityordered is NULL or quantityordered=''
or priceeach is NULL 
or orderlinenumber is NULL or orderlinenumber=''
or sales  is NULL or sales=''
or orderdate is NULL or orderdate=''
--ex3
ealter table public.sales_dataset_rfm_prj
add column CONTACTLASTNAME varchar (50)

alter table public.sales_dataset_rfm_prj
add column CONTACTFIRSTNAME varchar (50)

UPDATE public.sales_dataset_rfm_prj
SET CONTACTFIRSTNAME=LEFT (contactfullname, position('-' in contactfullname)-1)

UPDATE public.sales_dataset_rfm_prj
SET CONTACTLASTNAME=RIGHT (contactfullname,
length(contactfullname) -position('-' in contactfullname))

--ex4
select
UPPER(LEFT(contactfirstname,1))||LOWER(substring(contactfirstname 
									  from 2 for length(contactfirstname)-1)) 
									   contactfirstname,
UPPER(LEFT(contactlastname,1))||LOWER(substring(contactlastname 
									  from 2 for length(contactlastname)-1)) 
									   contactlastname								   
									   
	   from public.sales_dataset_rfm_prj	    
--ex5
**** TIM OUTLIER
ALTER TABLE public.sales_dataset_rfm_prj 
ALTER COLUMN quantityordered  TYPE 
integer USING (quantityordered::integer);

---IQR
with min_max as (
select
Q1-1.5*IQR as min_value,
Q3+1.5*IQR as max_value
from 
(
select
percentile_cont(0.025) within group (order by quantityordered) as Q1,
percentile_cont(0.075) within group (order by quantityordered) as Q3,
percentile_cont(0.075) within group (order by quantityordered) - 
percentile_cont(0.025) within group (order by quantityordered) as IQR
from public.sales_dataset_rfm_prj) as a )
select * from public.sales_dataset_rfm_prj
where quantityordered < (select min_value from min_max)
or quantityordered > (select max_value from min_max)
--- BOXPLOT
with a as (
select ordernumber,quantityordered,
(select avg(quantityordered) from public.sales_dataset_rfm_prj)
 as avg_quantity,
(select stddev(quantityordered) from public.sales_dataset_rfm_prj)
 as stddev
from public.sales_dataset_rfm_prj)

select 
 ordernumber,quantityordered,
(quantityordered - avg_quantity)/stddev as z_score
from a
where abs((quantityordered - avg_quantity)/stddev)>3

**** FIX
with a as (
select ordernumber,quantityordered,
(select avg(quantityordered) from public.sales_dataset_rfm_prj)
 as avg_quantity,
(select stddev(quantityordered) from public.sales_dataset_rfm_prj)
 as stddev
from public.sales_dataset_rfm_prj),
 cte as
(select 
 ordernumber,quantityordered,
(quantityordered - avg_quantity)/stddev as z_score
from a
where abs((quantityordered - avg_quantity)/stddev)>3)


UPDATE public.sales_dataset_rfm_prj
set quantityordered= (select avg(quantityordered) from public.sales_dataset_rfm_prj)
where 
quantityordered in (select quantityordered from cte)


--ex6

create view SALES_DATASET_RFM_PRJ_CLEAN
as
(select * frompublic.sales_dataset_rfm_prj )
